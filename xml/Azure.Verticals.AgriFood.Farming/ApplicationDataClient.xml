<Type Name="ApplicationDataClient" FullName="Azure.Verticals.AgriFood.Farming.ApplicationDataClient">
  <TypeSignature Language="C#" Value="public class ApplicationDataClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationDataClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Verticals.AgriFood.Farming.ApplicationDataClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationDataClient" />
  <TypeSignature Language="F#" Value="type ApplicationDataClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The ApplicationData service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ApplicationDataClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ApplicationDataClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationDataClient (Uri endpoint, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.#ctor(System.Uri,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Verticals.AgriFood.Farming.ApplicationDataClient : Uri * Azure.Core.TokenCredential -&gt; Azure.Verticals.AgriFood.Farming.ApplicationDataClient" Usage="new Azure.Verticals.AgriFood.Farming.ApplicationDataClient (endpoint, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <summary> Initializes a new instance of ApplicationDataClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationDataClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, options As FarmBeatsClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Verticals.AgriFood.Farming.ApplicationDataClient : Uri * Azure.Core.TokenCredential * Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions -&gt; Azure.Verticals.AgriFood.Farming.ApplicationDataClient" Usage="new Azure.Verticals.AgriFood.Farming.ApplicationDataClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of ApplicationDataClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdate (string farmerId, string applicationDataId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdate(string farmerId, string applicationDataId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.CreateOrUpdate(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (farmerId As String, applicationDataId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateOrUpdate : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="applicationDataClient.CreateOrUpdate (farmerId, applicationDataId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="applicationDataId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="applicationDataId"> ID of the application data resource. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Creates or updates an application data resource under a particular farmer. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>ApplicationData</c>:
            <code>{
              applicationProductDetails: [
                {
                  productName: string, # Optional. Name of the product applied.
                  isCarrier: boolean, # Optional. A flag indicating whether product is a carrier for a tank mix.
                  avgMaterial: {
                    unit: string, # Optional. Data unit.
                    value: number, # Optional. Data value.
                  }, # Optional. Schema for storing measurement reading and unit.
                  totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
                }
              ], # Optional. Application product details.
              avgMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              area: Measure, # Optional. Schema for storing measurement reading and unit.
              source: string, # Optional. Source of the operation data.
              operationModifiedDateTime: string (ISO 8601 Format), # Optional. Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
            Note: this will be specified by the source provider itself.
              operationStartDateTime: string (ISO 8601 Format), # Optional. Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              operationEndDateTime: string (ISO 8601 Format), # Optional. End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              attachmentsLink: string, # Optional. Link for attachments.
              associatedBoundaryId: string, # Optional. Optional boundary ID of the field for which operation was applied.
              operationBoundaryId: string, # Optional. Optional boundary ID of the actual area for which operation was applied inside the specified field.
              farmerId: string, # Optional. Farmer ID which belongs to the operation data.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code>
            
            Response Body:
            
            Schema for <c>ApplicationData</c>:
            <code>{
              applicationProductDetails: [
                {
                  productName: string, # Optional. Name of the product applied.
                  isCarrier: boolean, # Optional. A flag indicating whether product is a carrier for a tank mix.
                  avgMaterial: {
                    unit: string, # Optional. Data unit.
                    value: number, # Optional. Data value.
                  }, # Optional. Schema for storing measurement reading and unit.
                  totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
                }
              ], # Optional. Application product details.
              avgMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              area: Measure, # Optional. Schema for storing measurement reading and unit.
              source: string, # Optional. Source of the operation data.
              operationModifiedDateTime: string (ISO 8601 Format), # Optional. Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
            Note: this will be specified by the source provider itself.
              operationStartDateTime: string (ISO 8601 Format), # Optional. Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              operationEndDateTime: string (ISO 8601 Format), # Optional. End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              attachmentsLink: string, # Optional. Link for attachments.
              associatedBoundaryId: string, # Optional. Optional boundary ID of the field for which operation was applied.
              operationBoundaryId: string, # Optional. Optional boundary ID of the actual area for which operation was applied inside the specified field.
              farmerId: string, # Optional. Farmer ID which belongs to the operation data.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CreateOrUpdate with required parameters and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            var data = new {};
            
            Response response = client.CreateOrUpdate("<farmerId>", "<applicationDataId>", RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call CreateOrUpdate with all parameters and request content, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            var data = new {
                applicationProductDetails = new[] {
                    new {
                        productName = "<productName>",
                        isCarrier = true,
                        avgMaterial = new {
                            unit = "<unit>",
                            value = 123.45d,
                        },
                        totalMaterial = new {
                            unit = "<unit>",
                            value = 123.45d,
                        },
                    }
                },
                avgMaterial = new {
                    unit = "<unit>",
                    value = 123.45d,
                },
                totalMaterial = new {
                    unit = "<unit>",
                    value = 123.45d,
                },
                area = new {
                    unit = "<unit>",
                    value = 123.45d,
                },
                source = "<source>",
                operationModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
                operationStartDateTime = "2022-05-10T18:57:31.2311892Z",
                operationEndDateTime = "2022-05-10T18:57:31.2311892Z",
                associatedBoundaryId = "<associatedBoundaryId>",
                operationBoundaryId = "<operationBoundaryId>",
                status = "<status>",
                name = "<name>",
                description = "<description>",
                properties = new {
                    key = new {},
                },
            };
            
            Response response = client.CreateOrUpdate("<farmerId>", "<applicationDataId>", RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("productName").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("isCarrier").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("source").ToString());
            Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
            Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
            Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
            Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
            Console.WriteLine(result.GetProperty("operationBoundaryId").ToString());
            Console.WriteLine(result.GetProperty("farmerId").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("eTag").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateAsync (string farmerId, string applicationDataId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateAsync(string farmerId, string applicationDataId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.CreateOrUpdateAsync(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (farmerId As String, applicationDataId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateAsync : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="applicationDataClient.CreateOrUpdateAsync (farmerId, applicationDataId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="applicationDataId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="applicationDataId"> ID of the application data resource. </param>
        <param name="content"> The content to send as the body of the request. Details of the request body schema are in the Remarks section below. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Creates or updates an application data resource under a particular farmer. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the request and response payloads.
            
            Request Body:
            
            Schema for <c>ApplicationData</c>:
            <code>{
              applicationProductDetails: [
                {
                  productName: string, # Optional. Name of the product applied.
                  isCarrier: boolean, # Optional. A flag indicating whether product is a carrier for a tank mix.
                  avgMaterial: {
                    unit: string, # Optional. Data unit.
                    value: number, # Optional. Data value.
                  }, # Optional. Schema for storing measurement reading and unit.
                  totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
                }
              ], # Optional. Application product details.
              avgMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              area: Measure, # Optional. Schema for storing measurement reading and unit.
              source: string, # Optional. Source of the operation data.
              operationModifiedDateTime: string (ISO 8601 Format), # Optional. Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
            Note: this will be specified by the source provider itself.
              operationStartDateTime: string (ISO 8601 Format), # Optional. Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              operationEndDateTime: string (ISO 8601 Format), # Optional. End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              attachmentsLink: string, # Optional. Link for attachments.
              associatedBoundaryId: string, # Optional. Optional boundary ID of the field for which operation was applied.
              operationBoundaryId: string, # Optional. Optional boundary ID of the actual area for which operation was applied inside the specified field.
              farmerId: string, # Optional. Farmer ID which belongs to the operation data.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code>
            
            Response Body:
            
            Schema for <c>ApplicationData</c>:
            <code>{
              applicationProductDetails: [
                {
                  productName: string, # Optional. Name of the product applied.
                  isCarrier: boolean, # Optional. A flag indicating whether product is a carrier for a tank mix.
                  avgMaterial: {
                    unit: string, # Optional. Data unit.
                    value: number, # Optional. Data value.
                  }, # Optional. Schema for storing measurement reading and unit.
                  totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
                }
              ], # Optional. Application product details.
              avgMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              area: Measure, # Optional. Schema for storing measurement reading and unit.
              source: string, # Optional. Source of the operation data.
              operationModifiedDateTime: string (ISO 8601 Format), # Optional. Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
            Note: this will be specified by the source provider itself.
              operationStartDateTime: string (ISO 8601 Format), # Optional. Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              operationEndDateTime: string (ISO 8601 Format), # Optional. End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              attachmentsLink: string, # Optional. Link for attachments.
              associatedBoundaryId: string, # Optional. Optional boundary ID of the field for which operation was applied.
              operationBoundaryId: string, # Optional. Optional boundary ID of the actual area for which operation was applied inside the specified field.
              farmerId: string, # Optional. Farmer ID which belongs to the operation data.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call CreateOrUpdateAsync with required parameters and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            var data = new {};
            
            Response response = await client.CreateOrUpdateAsync("<farmerId>", "<applicationDataId>", RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
            ]]></code>
            This sample shows how to call CreateOrUpdateAsync with all parameters and request content, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            var data = new {
                applicationProductDetails = new[] {
                    new {
                        productName = "<productName>",
                        isCarrier = true,
                        avgMaterial = new {
                            unit = "<unit>",
                            value = 123.45d,
                        },
                        totalMaterial = new {
                            unit = "<unit>",
                            value = 123.45d,
                        },
                    }
                },
                avgMaterial = new {
                    unit = "<unit>",
                    value = 123.45d,
                },
                totalMaterial = new {
                    unit = "<unit>",
                    value = 123.45d,
                },
                area = new {
                    unit = "<unit>",
                    value = 123.45d,
                },
                source = "<source>",
                operationModifiedDateTime = "2022-05-10T18:57:31.2311892Z",
                operationStartDateTime = "2022-05-10T18:57:31.2311892Z",
                operationEndDateTime = "2022-05-10T18:57:31.2311892Z",
                associatedBoundaryId = "<associatedBoundaryId>",
                operationBoundaryId = "<operationBoundaryId>",
                status = "<status>",
                name = "<name>",
                description = "<description>",
                properties = new {
                    key = new {},
                },
            };
            
            Response response = await client.CreateOrUpdateAsync("<farmerId>", "<applicationDataId>", RequestContent.Create(data));
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("productName").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("isCarrier").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("source").ToString());
            Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
            Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
            Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
            Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
            Console.WriteLine(result.GetProperty("operationBoundaryId").ToString());
            Console.WriteLine(result.GetProperty("farmerId").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("eTag").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string farmerId, string applicationDataId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string farmerId, string applicationDataId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.Delete(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (farmerId As String, applicationDataId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.Delete : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="applicationDataClient.Delete (farmerId, applicationDataId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="applicationDataId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer resource. </param>
        <param name="applicationDataId"> ID of the application data. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Deletes a specified application data resource under a particular farmer. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call Delete with required parameters.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            Response response = client.Delete("<farmerId>", "<applicationDataId>");
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string farmerId, string applicationDataId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string farmerId, string applicationDataId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.DeleteAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (farmerId As String, applicationDataId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="applicationDataClient.DeleteAsync (farmerId, applicationDataId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="applicationDataId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer resource. </param>
        <param name="applicationDataId"> ID of the application data. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Deletes a specified application data resource under a particular farmer. </summary>
        <returns> The response returned from the service. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call DeleteAsync with required parameters.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            Response response = await client.DeleteAsync("<farmerId>", "<applicationDataId>");
            Console.WriteLine(response.Status);
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetAllApplicationData">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetAllApplicationData (double? minAvgMaterial = default, double? maxAvgMaterial = default, double? minTotalMaterial = default, double? maxTotalMaterial = default, System.Collections.Generic.IEnumerable&lt;string&gt; sources = default, System.Collections.Generic.IEnumerable&lt;string&gt; associatedBoundaryIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; operationBoundaryIds = default, DateTimeOffset? minOperationStartDateTime = default, DateTimeOffset? maxOperationStartDateTime = default, DateTimeOffset? minOperationEndDateTime = default, DateTimeOffset? maxOperationEndDateTime = default, DateTimeOffset? minOperationModifiedDateTime = default, DateTimeOffset? maxOperationModifiedDateTime = default, double? minArea = default, double? maxArea = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetAllApplicationData(valuetype System.Nullable`1&lt;float64&gt; minAvgMaterial, valuetype System.Nullable`1&lt;float64&gt; maxAvgMaterial, valuetype System.Nullable`1&lt;float64&gt; minTotalMaterial, valuetype System.Nullable`1&lt;float64&gt; maxTotalMaterial, class System.Collections.Generic.IEnumerable`1&lt;string&gt; sources, class System.Collections.Generic.IEnumerable`1&lt;string&gt; associatedBoundaryIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; operationBoundaryIds, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationStartDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationStartDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationEndDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationEndDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationModifiedDateTime, valuetype System.Nullable`1&lt;float64&gt; minArea, valuetype System.Nullable`1&lt;float64&gt; maxArea, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.GetAllApplicationData(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllApplicationData (Optional minAvgMaterial As Nullable(Of Double) = Nothing, Optional maxAvgMaterial As Nullable(Of Double) = Nothing, Optional minTotalMaterial As Nullable(Of Double) = Nothing, Optional maxTotalMaterial As Nullable(Of Double) = Nothing, Optional sources As IEnumerable(Of String) = Nothing, Optional associatedBoundaryIds As IEnumerable(Of String) = Nothing, Optional operationBoundaryIds As IEnumerable(Of String) = Nothing, Optional minOperationStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minOperationEndDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationEndDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minOperationModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minArea As Nullable(Of Double) = Nothing, Optional maxArea As Nullable(Of Double) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllApplicationData : Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetAllApplicationData : Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="applicationDataClient.GetAllApplicationData (minAvgMaterial, maxAvgMaterial, minTotalMaterial, maxTotalMaterial, sources, associatedBoundaryIds, operationBoundaryIds, minOperationStartDateTime, maxOperationStartDateTime, minOperationEndDateTime, maxOperationEndDateTime, minOperationModifiedDateTime, maxOperationModifiedDateTime, minArea, maxArea, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minAvgMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="minTotalMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxTotalMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="sources" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="associatedBoundaryIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="operationBoundaryIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minOperationStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minOperationEndDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationEndDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minOperationModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="minAvgMaterial"> Minimum average amount of material applied during the application (inclusive). </param>
        <param name="maxAvgMaterial"> Maximum average amount of material applied during the application (inclusive). </param>
        <param name="minTotalMaterial"> Minimum total amount of material applied during the application (inclusive). </param>
        <param name="maxTotalMaterial"> Maximum total amount of material applied during the application (inclusive). </param>
        <param name="sources"> Sources of the operation data. </param>
        <param name="associatedBoundaryIds"> Boundary IDs associated with operation data. </param>
        <param name="operationBoundaryIds"> Operation boundary IDs associated with operation data. </param>
        <param name="minOperationStartDateTime"> Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationStartDateTime"> Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minOperationEndDateTime"> Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationEndDateTime"> Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minOperationModifiedDateTime"> Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationModifiedDateTime"> Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minArea"> Minimum area for which operation was applied (inclusive). </param>
        <param name="maxArea"> Maximum area for which operation was applied (inclusive). </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Returns a paginated list of application data resources across all farmers. </summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>ApplicationDataListResponseValue</c>:
            <code>{
              applicationProductDetails: [
                {
                  productName: string, # Optional. Name of the product applied.
                  isCarrier: boolean, # Optional. A flag indicating whether product is a carrier for a tank mix.
                  avgMaterial: {
                    unit: string, # Optional. Data unit.
                    value: number, # Optional. Data value.
                  }, # Optional. Schema for storing measurement reading and unit.
                  totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
                }
              ], # Optional. Application product details.
              avgMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              area: Measure, # Optional. Schema for storing measurement reading and unit.
              source: string, # Optional. Source of the operation data.
              operationModifiedDateTime: string (ISO 8601 Format), # Optional. Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
            Note: this will be specified by the source provider itself.
              operationStartDateTime: string (ISO 8601 Format), # Optional. Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              operationEndDateTime: string (ISO 8601 Format), # Optional. End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              attachmentsLink: string, # Optional. Link for attachments.
              associatedBoundaryId: string, # Optional. Optional boundary ID of the field for which operation was applied.
              operationBoundaryId: string, # Optional. Optional boundary ID of the actual area for which operation was applied inside the specified field.
              farmerId: string, # Optional. Farmer ID which belongs to the operation data.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetAllApplicationData and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            foreach (var data in client.GetAllApplicationData())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetAllApplicationData with all parameters, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            foreach (var data in client.GetAllApplicationData(1234, 1234, 1234, 1234, new String[]{"<sources>"}, new String[]{"<associatedBoundaryIds>"}, new String[]{"<operationBoundaryIds>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, 1234, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("isCarrier").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("source").ToString());
                Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
                Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
                Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
                Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
                Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
                Console.WriteLine(result.GetProperty("operationBoundaryId").ToString());
                Console.WriteLine(result.GetProperty("farmerId").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("eTag").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("createdDateTime").ToString());
                Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetAllApplicationDataAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetAllApplicationDataAsync (double? minAvgMaterial = default, double? maxAvgMaterial = default, double? minTotalMaterial = default, double? maxTotalMaterial = default, System.Collections.Generic.IEnumerable&lt;string&gt; sources = default, System.Collections.Generic.IEnumerable&lt;string&gt; associatedBoundaryIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; operationBoundaryIds = default, DateTimeOffset? minOperationStartDateTime = default, DateTimeOffset? maxOperationStartDateTime = default, DateTimeOffset? minOperationEndDateTime = default, DateTimeOffset? maxOperationEndDateTime = default, DateTimeOffset? minOperationModifiedDateTime = default, DateTimeOffset? maxOperationModifiedDateTime = default, double? minArea = default, double? maxArea = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetAllApplicationDataAsync(valuetype System.Nullable`1&lt;float64&gt; minAvgMaterial, valuetype System.Nullable`1&lt;float64&gt; maxAvgMaterial, valuetype System.Nullable`1&lt;float64&gt; minTotalMaterial, valuetype System.Nullable`1&lt;float64&gt; maxTotalMaterial, class System.Collections.Generic.IEnumerable`1&lt;string&gt; sources, class System.Collections.Generic.IEnumerable`1&lt;string&gt; associatedBoundaryIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; operationBoundaryIds, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationStartDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationStartDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationEndDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationEndDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationModifiedDateTime, valuetype System.Nullable`1&lt;float64&gt; minArea, valuetype System.Nullable`1&lt;float64&gt; maxArea, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.GetAllApplicationDataAsync(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllApplicationDataAsync (Optional minAvgMaterial As Nullable(Of Double) = Nothing, Optional maxAvgMaterial As Nullable(Of Double) = Nothing, Optional minTotalMaterial As Nullable(Of Double) = Nothing, Optional maxTotalMaterial As Nullable(Of Double) = Nothing, Optional sources As IEnumerable(Of String) = Nothing, Optional associatedBoundaryIds As IEnumerable(Of String) = Nothing, Optional operationBoundaryIds As IEnumerable(Of String) = Nothing, Optional minOperationStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minOperationEndDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationEndDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minOperationModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minArea As Nullable(Of Double) = Nothing, Optional maxArea As Nullable(Of Double) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllApplicationDataAsync : Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetAllApplicationDataAsync : Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="applicationDataClient.GetAllApplicationDataAsync (minAvgMaterial, maxAvgMaterial, minTotalMaterial, maxTotalMaterial, sources, associatedBoundaryIds, operationBoundaryIds, minOperationStartDateTime, maxOperationStartDateTime, minOperationEndDateTime, maxOperationEndDateTime, minOperationModifiedDateTime, maxOperationModifiedDateTime, minArea, maxArea, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minAvgMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="minTotalMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxTotalMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="sources" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="associatedBoundaryIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="operationBoundaryIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minOperationStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minOperationEndDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationEndDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minOperationModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="minAvgMaterial"> Minimum average amount of material applied during the application (inclusive). </param>
        <param name="maxAvgMaterial"> Maximum average amount of material applied during the application (inclusive). </param>
        <param name="minTotalMaterial"> Minimum total amount of material applied during the application (inclusive). </param>
        <param name="maxTotalMaterial"> Maximum total amount of material applied during the application (inclusive). </param>
        <param name="sources"> Sources of the operation data. </param>
        <param name="associatedBoundaryIds"> Boundary IDs associated with operation data. </param>
        <param name="operationBoundaryIds"> Operation boundary IDs associated with operation data. </param>
        <param name="minOperationStartDateTime"> Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationStartDateTime"> Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minOperationEndDateTime"> Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationEndDateTime"> Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minOperationModifiedDateTime"> Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationModifiedDateTime"> Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minArea"> Minimum area for which operation was applied (inclusive). </param>
        <param name="maxArea"> Maximum area for which operation was applied (inclusive). </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Returns a paginated list of application data resources across all farmers. </summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>ApplicationDataListResponseValue</c>:
            <code>{
              applicationProductDetails: [
                {
                  productName: string, # Optional. Name of the product applied.
                  isCarrier: boolean, # Optional. A flag indicating whether product is a carrier for a tank mix.
                  avgMaterial: {
                    unit: string, # Optional. Data unit.
                    value: number, # Optional. Data value.
                  }, # Optional. Schema for storing measurement reading and unit.
                  totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
                }
              ], # Optional. Application product details.
              avgMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              area: Measure, # Optional. Schema for storing measurement reading and unit.
              source: string, # Optional. Source of the operation data.
              operationModifiedDateTime: string (ISO 8601 Format), # Optional. Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
            Note: this will be specified by the source provider itself.
              operationStartDateTime: string (ISO 8601 Format), # Optional. Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              operationEndDateTime: string (ISO 8601 Format), # Optional. End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              attachmentsLink: string, # Optional. Link for attachments.
              associatedBoundaryId: string, # Optional. Optional boundary ID of the field for which operation was applied.
              operationBoundaryId: string, # Optional. Optional boundary ID of the actual area for which operation was applied inside the specified field.
              farmerId: string, # Optional. Farmer ID which belongs to the operation data.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetAllApplicationDataAsync and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            await foreach (var data in client.GetAllApplicationDataAsync())
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetAllApplicationDataAsync with all parameters, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            await foreach (var data in client.GetAllApplicationDataAsync(1234, 1234, 1234, 1234, new String[]{"<sources>"}, new String[]{"<associatedBoundaryIds>"}, new String[]{"<operationBoundaryIds>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, 1234, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("isCarrier").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("source").ToString());
                Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
                Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
                Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
                Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
                Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
                Console.WriteLine(result.GetProperty("operationBoundaryId").ToString());
                Console.WriteLine(result.GetProperty("farmerId").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("eTag").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("createdDateTime").ToString());
                Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetAllApplicationDataByFarmerId">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetAllApplicationDataByFarmerId (string farmerId, double? minAvgMaterial = default, double? maxAvgMaterial = default, double? minTotalMaterial = default, double? maxTotalMaterial = default, System.Collections.Generic.IEnumerable&lt;string&gt; sources = default, System.Collections.Generic.IEnumerable&lt;string&gt; associatedBoundaryIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; operationBoundaryIds = default, DateTimeOffset? minOperationStartDateTime = default, DateTimeOffset? maxOperationStartDateTime = default, DateTimeOffset? minOperationEndDateTime = default, DateTimeOffset? maxOperationEndDateTime = default, DateTimeOffset? minOperationModifiedDateTime = default, DateTimeOffset? maxOperationModifiedDateTime = default, double? minArea = default, double? maxArea = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetAllApplicationDataByFarmerId(string farmerId, valuetype System.Nullable`1&lt;float64&gt; minAvgMaterial, valuetype System.Nullable`1&lt;float64&gt; maxAvgMaterial, valuetype System.Nullable`1&lt;float64&gt; minTotalMaterial, valuetype System.Nullable`1&lt;float64&gt; maxTotalMaterial, class System.Collections.Generic.IEnumerable`1&lt;string&gt; sources, class System.Collections.Generic.IEnumerable`1&lt;string&gt; associatedBoundaryIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; operationBoundaryIds, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationStartDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationStartDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationEndDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationEndDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationModifiedDateTime, valuetype System.Nullable`1&lt;float64&gt; minArea, valuetype System.Nullable`1&lt;float64&gt; maxArea, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.GetAllApplicationDataByFarmerId(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllApplicationDataByFarmerId (farmerId As String, Optional minAvgMaterial As Nullable(Of Double) = Nothing, Optional maxAvgMaterial As Nullable(Of Double) = Nothing, Optional minTotalMaterial As Nullable(Of Double) = Nothing, Optional maxTotalMaterial As Nullable(Of Double) = Nothing, Optional sources As IEnumerable(Of String) = Nothing, Optional associatedBoundaryIds As IEnumerable(Of String) = Nothing, Optional operationBoundaryIds As IEnumerable(Of String) = Nothing, Optional minOperationStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minOperationEndDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationEndDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minOperationModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minArea As Nullable(Of Double) = Nothing, Optional maxArea As Nullable(Of Double) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllApplicationDataByFarmerId : string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetAllApplicationDataByFarmerId : string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="applicationDataClient.GetAllApplicationDataByFarmerId (farmerId, minAvgMaterial, maxAvgMaterial, minTotalMaterial, maxTotalMaterial, sources, associatedBoundaryIds, operationBoundaryIds, minOperationStartDateTime, maxOperationStartDateTime, minOperationEndDateTime, maxOperationEndDateTime, minOperationModifiedDateTime, maxOperationModifiedDateTime, minArea, maxArea, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="minAvgMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="minTotalMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxTotalMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="sources" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="associatedBoundaryIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="operationBoundaryIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minOperationStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minOperationEndDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationEndDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minOperationModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="minAvgMaterial"> Minimum average amount of material applied during the application (inclusive). </param>
        <param name="maxAvgMaterial"> Maximum average amount of material applied during the application (inclusive). </param>
        <param name="minTotalMaterial"> Minimum total amount of material applied during the application (inclusive). </param>
        <param name="maxTotalMaterial"> Maximum total amount of material applied during the application (inclusive). </param>
        <param name="sources"> Sources of the operation data. </param>
        <param name="associatedBoundaryIds"> Boundary IDs associated with operation data. </param>
        <param name="operationBoundaryIds"> Operation boundary IDs associated with operation data. </param>
        <param name="minOperationStartDateTime"> Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationStartDateTime"> Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minOperationEndDateTime"> Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationEndDateTime"> Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minOperationModifiedDateTime"> Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationModifiedDateTime"> Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minArea"> Minimum area for which operation was applied (inclusive). </param>
        <param name="maxArea"> Maximum area for which operation was applied (inclusive). </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Returns a paginated list of application data resources under a particular farm. </summary>
        <returns> The <see cref="T:Azure.Pageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>ApplicationDataListResponseValue</c>:
            <code>{
              applicationProductDetails: [
                {
                  productName: string, # Optional. Name of the product applied.
                  isCarrier: boolean, # Optional. A flag indicating whether product is a carrier for a tank mix.
                  avgMaterial: {
                    unit: string, # Optional. Data unit.
                    value: number, # Optional. Data value.
                  }, # Optional. Schema for storing measurement reading and unit.
                  totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
                }
              ], # Optional. Application product details.
              avgMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              area: Measure, # Optional. Schema for storing measurement reading and unit.
              source: string, # Optional. Source of the operation data.
              operationModifiedDateTime: string (ISO 8601 Format), # Optional. Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
            Note: this will be specified by the source provider itself.
              operationStartDateTime: string (ISO 8601 Format), # Optional. Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              operationEndDateTime: string (ISO 8601 Format), # Optional. End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              attachmentsLink: string, # Optional. Link for attachments.
              associatedBoundaryId: string, # Optional. Optional boundary ID of the field for which operation was applied.
              operationBoundaryId: string, # Optional. Optional boundary ID of the actual area for which operation was applied inside the specified field.
              farmerId: string, # Optional. Farmer ID which belongs to the operation data.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetAllApplicationDataByFarmerId with required parameters and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            foreach (var data in client.GetAllApplicationDataByFarmerId("<farmerId>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetAllApplicationDataByFarmerId with all parameters, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            foreach (var data in client.GetAllApplicationDataByFarmerId("<farmerId>", 1234, 1234, 1234, 1234, new String[]{"<sources>"}, new String[]{"<associatedBoundaryIds>"}, new String[]{"<operationBoundaryIds>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, 1234, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("isCarrier").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("source").ToString());
                Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
                Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
                Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
                Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
                Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
                Console.WriteLine(result.GetProperty("operationBoundaryId").ToString());
                Console.WriteLine(result.GetProperty("farmerId").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("eTag").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("createdDateTime").ToString());
                Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetAllApplicationDataByFarmerIdAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetAllApplicationDataByFarmerIdAsync (string farmerId, double? minAvgMaterial = default, double? maxAvgMaterial = default, double? minTotalMaterial = default, double? maxTotalMaterial = default, System.Collections.Generic.IEnumerable&lt;string&gt; sources = default, System.Collections.Generic.IEnumerable&lt;string&gt; associatedBoundaryIds = default, System.Collections.Generic.IEnumerable&lt;string&gt; operationBoundaryIds = default, DateTimeOffset? minOperationStartDateTime = default, DateTimeOffset? maxOperationStartDateTime = default, DateTimeOffset? minOperationEndDateTime = default, DateTimeOffset? maxOperationEndDateTime = default, DateTimeOffset? minOperationModifiedDateTime = default, DateTimeOffset? maxOperationModifiedDateTime = default, double? minArea = default, double? maxArea = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetAllApplicationDataByFarmerIdAsync(string farmerId, valuetype System.Nullable`1&lt;float64&gt; minAvgMaterial, valuetype System.Nullable`1&lt;float64&gt; maxAvgMaterial, valuetype System.Nullable`1&lt;float64&gt; minTotalMaterial, valuetype System.Nullable`1&lt;float64&gt; maxTotalMaterial, class System.Collections.Generic.IEnumerable`1&lt;string&gt; sources, class System.Collections.Generic.IEnumerable`1&lt;string&gt; associatedBoundaryIds, class System.Collections.Generic.IEnumerable`1&lt;string&gt; operationBoundaryIds, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationStartDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationStartDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationEndDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationEndDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minOperationModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxOperationModifiedDateTime, valuetype System.Nullable`1&lt;float64&gt; minArea, valuetype System.Nullable`1&lt;float64&gt; maxArea, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.GetAllApplicationDataByFarmerIdAsync(System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllApplicationDataByFarmerIdAsync (farmerId As String, Optional minAvgMaterial As Nullable(Of Double) = Nothing, Optional maxAvgMaterial As Nullable(Of Double) = Nothing, Optional minTotalMaterial As Nullable(Of Double) = Nothing, Optional maxTotalMaterial As Nullable(Of Double) = Nothing, Optional sources As IEnumerable(Of String) = Nothing, Optional associatedBoundaryIds As IEnumerable(Of String) = Nothing, Optional operationBoundaryIds As IEnumerable(Of String) = Nothing, Optional minOperationStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationStartDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minOperationEndDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationEndDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minOperationModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxOperationModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minArea As Nullable(Of Double) = Nothing, Optional maxArea As Nullable(Of Double) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetAllApplicationDataByFarmerIdAsync : string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetAllApplicationDataByFarmerIdAsync : string * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="applicationDataClient.GetAllApplicationDataByFarmerIdAsync (farmerId, minAvgMaterial, maxAvgMaterial, minTotalMaterial, maxTotalMaterial, sources, associatedBoundaryIds, operationBoundaryIds, minOperationStartDateTime, maxOperationStartDateTime, minOperationEndDateTime, maxOperationEndDateTime, minOperationModifiedDateTime, maxOperationModifiedDateTime, minArea, maxArea, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="minAvgMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAvgMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="minTotalMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxTotalMaterial" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="sources" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="associatedBoundaryIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="operationBoundaryIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minOperationStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationStartDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minOperationEndDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationEndDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minOperationModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxOperationModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxArea" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="minAvgMaterial"> Minimum average amount of material applied during the application (inclusive). </param>
        <param name="maxAvgMaterial"> Maximum average amount of material applied during the application (inclusive). </param>
        <param name="minTotalMaterial"> Minimum total amount of material applied during the application (inclusive). </param>
        <param name="maxTotalMaterial"> Maximum total amount of material applied during the application (inclusive). </param>
        <param name="sources"> Sources of the operation data. </param>
        <param name="associatedBoundaryIds"> Boundary IDs associated with operation data. </param>
        <param name="operationBoundaryIds"> Operation boundary IDs associated with operation data. </param>
        <param name="minOperationStartDateTime"> Minimum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationStartDateTime"> Maximum start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minOperationEndDateTime"> Minimum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationEndDateTime"> Maximum end date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minOperationModifiedDateTime"> Minimum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="maxOperationModifiedDateTime"> Maximum modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ (inclusive). </param>
        <param name="minArea"> Minimum area for which operation was applied (inclusive). </param>
        <param name="maxArea"> Maximum area for which operation was applied (inclusive). </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Returns a paginated list of application data resources under a particular farm. </summary>
        <returns> The <see cref="T:Azure.AsyncPageable`1" /> from the service containing a list of <see cref="T:System.BinaryData" /> objects. Details of the body schema for each item in the collection are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for one item in the pageable response.
            
            Response Body:
            
            Schema for <c>ApplicationDataListResponseValue</c>:
            <code>{
              applicationProductDetails: [
                {
                  productName: string, # Optional. Name of the product applied.
                  isCarrier: boolean, # Optional. A flag indicating whether product is a carrier for a tank mix.
                  avgMaterial: {
                    unit: string, # Optional. Data unit.
                    value: number, # Optional. Data value.
                  }, # Optional. Schema for storing measurement reading and unit.
                  totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
                }
              ], # Optional. Application product details.
              avgMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              area: Measure, # Optional. Schema for storing measurement reading and unit.
              source: string, # Optional. Source of the operation data.
              operationModifiedDateTime: string (ISO 8601 Format), # Optional. Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
            Note: this will be specified by the source provider itself.
              operationStartDateTime: string (ISO 8601 Format), # Optional. Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              operationEndDateTime: string (ISO 8601 Format), # Optional. End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              attachmentsLink: string, # Optional. Link for attachments.
              associatedBoundaryId: string, # Optional. Optional boundary ID of the field for which operation was applied.
              operationBoundaryId: string, # Optional. Optional boundary ID of the actual area for which operation was applied inside the specified field.
              farmerId: string, # Optional. Farmer ID which belongs to the operation data.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetAllApplicationDataByFarmerIdAsync with required parameters and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            await foreach (var data in client.GetAllApplicationDataByFarmerIdAsync("<farmerId>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
            ]]></code>
            This sample shows how to call GetAllApplicationDataByFarmerIdAsync with all parameters, and how to parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            await foreach (var data in client.GetAllApplicationDataByFarmerIdAsync("<farmerId>", 1234, 1234, 1234, 1234, new String[]{"<sources>"}, new String[]{"<associatedBoundaryIds>"}, new String[]{"<operationBoundaryIds>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, 1234, new String[]{"<ids>"}, new String[]{"<names>"}, new String[]{"<propertyFilters>"}, new String[]{"<statuses>"}, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, DateTimeOffset.UtcNow, 1234, "<skipToken>"))
            {
                JsonElement result = JsonDocument.Parse(data.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("productName").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("isCarrier").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
                Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
                Console.WriteLine(result.GetProperty("source").ToString());
                Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
                Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
                Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
                Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
                Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
                Console.WriteLine(result.GetProperty("operationBoundaryId").ToString());
                Console.WriteLine(result.GetProperty("farmerId").ToString());
                Console.WriteLine(result.GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("eTag").ToString());
                Console.WriteLine(result.GetProperty("status").ToString());
                Console.WriteLine(result.GetProperty("createdDateTime").ToString());
                Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
                Console.WriteLine(result.GetProperty("name").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
            }
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationData">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetApplicationData (string farmerId, string applicationDataId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetApplicationData(string farmerId, string applicationDataId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.GetApplicationData(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationData (farmerId As String, applicationDataId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationData : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetApplicationData : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="applicationDataClient.GetApplicationData (farmerId, applicationDataId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="applicationDataId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer resource. </param>
        <param name="applicationDataId"> ID of the application data resource. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get a specified application data resource under a particular farmer. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ApplicationData</c>:
            <code>{
              applicationProductDetails: [
                {
                  productName: string, # Optional. Name of the product applied.
                  isCarrier: boolean, # Optional. A flag indicating whether product is a carrier for a tank mix.
                  avgMaterial: {
                    unit: string, # Optional. Data unit.
                    value: number, # Optional. Data value.
                  }, # Optional. Schema for storing measurement reading and unit.
                  totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
                }
              ], # Optional. Application product details.
              avgMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              area: Measure, # Optional. Schema for storing measurement reading and unit.
              source: string, # Optional. Source of the operation data.
              operationModifiedDateTime: string (ISO 8601 Format), # Optional. Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
            Note: this will be specified by the source provider itself.
              operationStartDateTime: string (ISO 8601 Format), # Optional. Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              operationEndDateTime: string (ISO 8601 Format), # Optional. End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              attachmentsLink: string, # Optional. Link for attachments.
              associatedBoundaryId: string, # Optional. Optional boundary ID of the field for which operation was applied.
              operationBoundaryId: string, # Optional. Optional boundary ID of the actual area for which operation was applied inside the specified field.
              farmerId: string, # Optional. Farmer ID which belongs to the operation data.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetApplicationData with required parameters and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            Response response = client.GetApplicationData("<farmerId>", "<applicationDataId>");
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("productName").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("isCarrier").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("source").ToString());
            Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
            Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
            Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
            Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
            Console.WriteLine(result.GetProperty("operationBoundaryId").ToString());
            Console.WriteLine(result.GetProperty("farmerId").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("eTag").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetApplicationDataAsync (string farmerId, string applicationDataId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetApplicationDataAsync(string farmerId, string applicationDataId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.GetApplicationDataAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationDataAsync (farmerId As String, applicationDataId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationDataAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetApplicationDataAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="applicationDataClient.GetApplicationDataAsync (farmerId, applicationDataId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="applicationDataId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer resource. </param>
        <param name="applicationDataId"> ID of the application data resource. </param>
        <param name="context"> The request context, which can override default behaviors of the client pipeline on a per-call basis. </param>
        <summary> Get a specified application data resource under a particular farmer. </summary>
        <returns> The response returned from the service. Details of the response body schema are in the Remarks section below. </returns>
        <remarks>
            Below is the JSON schema for the response payload.
            
            Response Body:
            
            Schema for <c>ApplicationData</c>:
            <code>{
              applicationProductDetails: [
                {
                  productName: string, # Optional. Name of the product applied.
                  isCarrier: boolean, # Optional. A flag indicating whether product is a carrier for a tank mix.
                  avgMaterial: {
                    unit: string, # Optional. Data unit.
                    value: number, # Optional. Data value.
                  }, # Optional. Schema for storing measurement reading and unit.
                  totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
                }
              ], # Optional. Application product details.
              avgMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              totalMaterial: Measure, # Optional. Schema for storing measurement reading and unit.
              area: Measure, # Optional. Schema for storing measurement reading and unit.
              source: string, # Optional. Source of the operation data.
              operationModifiedDateTime: string (ISO 8601 Format), # Optional. Modified date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
            Note: this will be specified by the source provider itself.
              operationStartDateTime: string (ISO 8601 Format), # Optional. Start date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              operationEndDateTime: string (ISO 8601 Format), # Optional. End date-time of the operation data, sample format: yyyy-MM-ddTHH:mm:ssZ.
              attachmentsLink: string, # Optional. Link for attachments.
              associatedBoundaryId: string, # Optional. Optional boundary ID of the field for which operation was applied.
              operationBoundaryId: string, # Optional. Optional boundary ID of the actual area for which operation was applied inside the specified field.
              farmerId: string, # Optional. Farmer ID which belongs to the operation data.
              id: string, # Optional. Unique resource ID.
              eTag: string, # Optional. The ETag value to implement optimistic concurrency.
              status: string, # Optional. Status of the resource.
              createdDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.
              modifiedDateTime: string (ISO 8601 Format), # Optional. Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.
              name: string, # Optional. Name to identify resource.
              description: string, # Optional. Textual description of the resource.
              properties: Dictionary&lt;string, AnyObject&gt;, # Optional. A collection of key value pairs that belongs to the resource.
            Each pair must not have a key greater than 50 characters
            and must not have a value greater than 150 characters.
            Note: A maximum of 25 key value pairs can be provided for a resource and only string and numeral values are supported.
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="applicationDataId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:Azure.RequestFailedException"> Service returned a non-success status code. </exception>
        <example>
            This sample shows how to call GetApplicationDataAsync with required parameters and parse the result.
            <code><![CDATA[
            var credential = new DefaultAzureCredential();
            var endpoint = new Uri("<https://my-service.azure.com>");
            var client = new ApplicationDataClient(endpoint, credential);
            
            Response response = await client.GetApplicationDataAsync("<farmerId>", "<applicationDataId>");
            
            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("productName").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("isCarrier").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("avgMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("applicationProductDetails")[0].GetProperty("totalMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("avgMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("totalMaterial").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("area").GetProperty("unit").ToString());
            Console.WriteLine(result.GetProperty("area").GetProperty("value").ToString());
            Console.WriteLine(result.GetProperty("source").ToString());
            Console.WriteLine(result.GetProperty("operationModifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("operationStartDateTime").ToString());
            Console.WriteLine(result.GetProperty("operationEndDateTime").ToString());
            Console.WriteLine(result.GetProperty("attachmentsLink").ToString());
            Console.WriteLine(result.GetProperty("associatedBoundaryId").ToString());
            Console.WriteLine(result.GetProperty("operationBoundaryId").ToString());
            Console.WriteLine(result.GetProperty("farmerId").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("eTag").ToString());
            Console.WriteLine(result.GetProperty("status").ToString());
            Console.WriteLine(result.GetProperty("createdDateTime").ToString());
            Console.WriteLine(result.GetProperty("modifiedDateTime").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("description").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("<test>").ToString());
            ]]></code></example>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Verticals.AgriFood.Farming.ApplicationDataClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Verticals.AgriFood.Farming.ApplicationDataClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
